(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{301:function(t,s,a){t.exports=a.p+"assets/img/java内存.e3f0abab.png"},302:function(t,s,a){t.exports=a.p+"assets/img/数组内存图.2d93a684.png"},303:function(t,s,a){t.exports=a.p+"assets/img/两个数组指向同一个空间的内存图.155182d3.png"},304:function(t,s,a){t.exports=a.p+"assets/img/从内存角度解释基本数据类型和引用数据类型.69e2258c.png"},305:function(t,s,a){t.exports=a.p+"assets/img/方法调用的基本内存原理（1）.f71f8758.png"},306:function(t,s,a){t.exports=a.p+"assets/img/方法调用的基本内存原理（2）.b38f2d78.png"},307:function(t,s,a){t.exports=a.p+"assets/img/基本数据类型的内存原理.7c0bdf3a.png"},308:function(t,s,a){t.exports=a.p+"assets/img/引用数据类型的内存原理.bf02b2db.png"},309:function(t,s,a){t.exports=a.p+"assets/img/一个对象的内存图.ac9a495a.png"},310:function(t,s,a){t.exports=a.p+"assets/img/两个对象的内存图.8bafbf54.png"},311:function(t,s,a){t.exports=a.p+"assets/img/两个引用指向同一个对象.c6cb967f.png"},312:function(t,s,a){t.exports=a.p+"assets/img/this的内存原理（1）.b371cf3a.png"},313:function(t,s,a){t.exports=a.p+"assets/img/this的内存原理（2）.5c2ba3d8.png"},314:function(t,s,a){t.exports=a.p+"assets/img/static内存图.cead9c3c.png"},315:function(t,s,a){t.exports=a.p+"assets/img/继承的内存图.08524115.png"},316:function(t,s,a){t.exports=a.p+"assets/img/成员方法是否可以被继承.5d50e92f.png"},317:function(t,s,a){t.exports=a.p+"assets/img/成员方法被继承内存图.e54c3c59.png"},453:function(t,s,a){"use strict";a.r(s);var r=a(8),i=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"java-内存分配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java-内存分配"}},[t._v("#")]),t._v(" java 内存分配")]),t._v(" "),s("div",{attrs:{align:"center"}},[s("img",{attrs:{src:a(301),width:"100%"}})]),t._v(" "),s("h3",{attrs:{id:"数组内存图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组内存图"}},[t._v("#")]),t._v(" 数组内存图")]),t._v(" "),s("div",{attrs:{align:"center"}},[s("img",{attrs:{src:a(302),width:"100%"}})]),t._v(" "),s("p",[t._v("总结：")]),t._v(" "),s("ol",[s("li",[t._v("只要是 new 出来的一定是在堆里面开辟了一个小空间。")]),t._v(" "),s("li",[t._v("如果 new 了多次，那么在堆里面有多个小空间，每个小空间中都有各自的数据。")])]),t._v(" "),s("div",{attrs:{align:"center"}},[s("img",{attrs:{src:a(303),width:"100%"}})]),t._v(" "),s("p",[t._v("总结：当两个数组指向同一个小空间时，其中一个数组对小空间中的值发生了改变，那么其他数组再次访问的时候都是修改之后的结果了。")]),t._v(" "),s("h3",{attrs:{id:"基本数据类型和引用数据类型-从内存角度解释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型和引用数据类型-从内存角度解释"}},[t._v("#")]),t._v(" 基本数据类型和引用数据类型（从内存角度解释）")]),t._v(" "),s("div",{attrs:{align:"center"}},[s("img",{attrs:{src:a(304),width:"100%"}})]),t._v(" "),s("h3",{attrs:{id:"方法的内存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法的内存"}},[t._v("#")]),t._v(" 方法的内存")]),t._v(" "),s("ol",[s("li",[t._v("方法调用的基本内存原理")])]),t._v(" "),s("div",{attrs:{align:"center"}},[s("img",{attrs:{src:a(305),width:"100%"}})]),t._v(" "),s("div",{attrs:{align:"center"}},[s("img",{attrs:{src:a(306),width:"100%"}})]),t._v(" "),s("p",[s("strong",[t._v("注意：")]),t._v(" 栈的特点是先进后出。")]),t._v(" "),s("ol",[s("li",[t._v("方法传递基本数据类型的内存原理")])]),t._v(" "),s("div",{attrs:{align:"center"}},[s("img",{attrs:{src:a(307),width:"100%"}})]),t._v(" "),s("p",[t._v("传递基本数据类型时，传递的是真实的数据，形参的改变，不影响实际参数的值。")]),t._v(" "),s("ol",[s("li",[t._v("方法传递引用数据类型的内存原理")])]),t._v(" "),s("div",{attrs:{align:"center"}},[s("img",{attrs:{src:a(308),width:"100%"}})]),t._v(" "),s("p",[t._v("传递引用数据类型时，传递的是地址值，形参的改变，影响实际参数的值。")]),t._v(" "),s("h2",{attrs:{id:"对象内存图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象内存图"}},[t._v("#")]),t._v(" 对象内存图")]),t._v(" "),s("h3",{attrs:{id:"一个对象的内存图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一个对象的内存图"}},[t._v("#")]),t._v(" 一个对象的内存图")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ol",[s("li",[t._v("加载class文件到方法区")]),t._v(" "),s("li",[t._v("申明局部变量")]),t._v(" "),s("li",[t._v("在堆内存中开辟一个空间")]),t._v(" "),s("li",[t._v("默认初始化")]),t._v(" "),s("li",[t._v("显示初始化")]),t._v(" "),s("li",[t._v("构造方法初始化")]),t._v(" "),s("li",[t._v("将堆内存中的地址值赋值给左边的局部变量")])]),t._v(" "),s("div",{attrs:{align:"center"}},[s("img",{attrs:{src:a(309),width:"100%"}})]),t._v(" "),s("h3",{attrs:{id:"两个对象的内存图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#两个对象的内存图"}},[t._v("#")]),t._v(" 两个对象的内存图")]),t._v(" "),s("div",{attrs:{align:"center"}},[s("img",{attrs:{src:a(310),width:"100%"}})]),t._v(" "),s("h3",{attrs:{id:"两个引用指向同一个对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#两个引用指向同一个对象"}},[t._v("#")]),t._v(" 两个引用指向同一个对象")]),t._v(" "),s("div",{attrs:{align:"center"}},[s("img",{attrs:{src:a(311),width:"100%"}})]),t._v(" "),s("h3",{attrs:{id:"this的内存原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#this的内存原理"}},[t._v("#")]),t._v(" this的内存原理")]),t._v(" "),s("ul",[s("li",[t._v("this的作用：区分局部变量和成员变量")]),t._v(" "),s("li",[t._v("this的本质：所在方法调用者的地址值")])]),t._v(" "),s("div",{attrs:{align:"center"}},[s("img",{attrs:{src:a(312),width:"100%"}})]),t._v(" "),s("div",{attrs:{align:"center"}},[s("img",{attrs:{src:a(313),width:"100%"}})]),t._v(" "),s("h3",{attrs:{id:"static-内存图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#static-内存图"}},[t._v("#")]),t._v(" static 内存图")]),t._v(" "),s("div",{attrs:{align:"left"}},[s("img",{attrs:{src:a(314),width:"100%"}})]),t._v(" "),s("h3",{attrs:{id:"继承的内存图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#继承的内存图"}},[t._v("#")]),t._v(" 继承的内存图")]),t._v(" "),s("ul",[s("li",[t._v("没有private"),s("strong",[t._v("成员变量")]),t._v("继承的内存图")])]),t._v(" "),s("div",{attrs:{align:"left"}},[s("img",{attrs:{src:a(315),width:"100%"}})]),t._v(" "),s("ul",[s("li",[t._v("有private"),s("strong",[t._v("成员方法")]),t._v("继承的内存图")])]),t._v(" "),s("div",{attrs:{align:"left"}},[s("img",{attrs:{src:a(316),width:"100%"}})]),t._v(" "),s("div",{attrs:{align:"left"}},[s("img",{attrs:{src:a(317),width:"100%"}})]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("虚方法表中的成员方法可以被继承，不在表中的成员方法不能被继承")])])])])}),[],!1,null,null,null);s.default=i.exports}}]);