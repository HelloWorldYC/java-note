(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{318:function(t,s,a){t.exports=a.p+"assets/img/事务.e1c91b8d.png"},319:function(t,s,a){t.exports=a.p+"assets/img/事务的隔离性.f414d25c.png"},320:function(t,s,a){t.exports=a.p+"assets/img/第一类丢失更新.b4a19495.png"},321:function(t,s,a){t.exports=a.p+"assets/img/第二类丢失更新.55fa0ae0.png"},322:function(t,s,a){t.exports=a.p+"assets/img/脏读.e0814f02.png"},323:function(t,s,a){t.exports=a.p+"assets/img/不可重复读.7d31f4bf.png"},324:function(t,s,a){t.exports=a.p+"assets/img/幻读.1fb3e2c4.png"},325:function(t,s,a){t.exports=a.p+"assets/img/事务隔离级别.5b8df8fc.png"},326:function(t,s,a){t.exports=a.p+"assets/img/数据库实现数据安全的机制.f1c972a1.png"},455:function(t,s,a){"use strict";a.r(s);var r=a(8),i=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"事务管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事务管理"}},[t._v("#")]),t._v(" 事务管理")]),t._v(" "),s("h3",{attrs:{id:"事务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事务"}},[t._v("#")]),t._v(" 事务")]),t._v(" "),s("div",{attrs:{align:"center"}},[s("img",{attrs:{src:a(318),width:"100%"}})]),t._v(" "),s("h3",{attrs:{id:"事务的隔离性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事务的隔离性"}},[t._v("#")]),t._v(" 事务的隔离性")]),t._v(" "),s("div",{attrs:{align:"left"}},[s("img",{attrs:{src:a(319),width:"40%"}})]),t._v(" "),s("h4",{attrs:{id:"第一类丢失更新"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第一类丢失更新"}},[t._v("#")]),t._v(" 第一类丢失更新")]),t._v(" "),s("p",[t._v("某一个事务的回滚，导致另外一个事务已更新的数据丢失了。"),s("br")]),s("div",{attrs:{align:"left"}},[s("img",{attrs:{src:a(320),width:"50%"}})]),s("p"),t._v(" "),s("h4",{attrs:{id:"第二类丢失更新"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第二类丢失更新"}},[t._v("#")]),t._v(" 第二类丢失更新")]),t._v(" "),s("p",[t._v("某一个事务的提交，导致另外一个事务已更新的数据丢失了。"),s("br")]),s("div",{attrs:{align:"left"}},[s("img",{attrs:{src:a(321),width:"50%"}})]),s("p"),t._v(" "),s("h4",{attrs:{id:"脏读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#脏读"}},[t._v("#")]),t._v(" 脏读")]),t._v(" "),s("p",[t._v("某一个事务，读取了另外一个事务未提交的数据。\n")]),s("div",{attrs:{align:"left"}},[s("img",{attrs:{src:a(322),width:"50%"}})]),s("p"),t._v(" "),s("h4",{attrs:{id:"不可重复读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不可重复读"}},[t._v("#")]),t._v(" 不可重复读")]),t._v(" "),s("p",[t._v("某一个事务，对同一个数据前后读取的结果不一致。\n")]),s("div",{attrs:{align:"left"}},[s("img",{attrs:{src:a(323),width:"50%"}})]),s("p"),t._v(" "),s("h4",{attrs:{id:"幻读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#幻读"}},[t._v("#")]),t._v(" 幻读")]),t._v(" "),s("p",[t._v("某一个事务，对同一个表前后查询到的"),s("strong",[t._v("行数")]),t._v("不一致。\n")]),s("div",{attrs:{align:"left"}},[s("img",{attrs:{src:a(324),width:"50%"}})]),s("p"),t._v(" "),s("h4",{attrs:{id:"事务隔离级别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事务隔离级别"}},[t._v("#")]),t._v(" 事务隔离级别")]),t._v(" "),s("p",[t._v("（Y表示会出现这种异常）\n")]),s("div",{attrs:{align:"left"}},[s("img",{attrs:{src:a(325),width:"100%"}})]),s("p"),t._v(" "),s("h3",{attrs:{id:"数据库保障数据安全的实现机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库保障数据安全的实现机制"}},[t._v("#")]),t._v(" 数据库保障数据安全的实现机制")]),t._v(" "),s("div",{attrs:{align:"left"}},[s("img",{attrs:{src:a(326),width:"100%"}})]),t._v(" "),s("h4",{attrs:{id:"spring事务管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring事务管理"}},[t._v("#")]),t._v(" spring事务管理")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("声明式事务")]),t._v(" "),s("ul",[s("li",[t._v("通过XML配置，声明某方法的事务特征。")]),t._v(" "),s("li",[t._v("通过注解，声明某方法的事务特征。")])])]),t._v(" "),s("li",[s("p",[t._v("编程式事务")]),t._v(" "),s("ul",[s("li",[t._v("通过 TransactionTemplate管理事务，并通过它执行数据库的操作。")])])]),t._v(" "),s("li",[s("p",[t._v("事务传播行为")]),t._v(" "),s("ul",[s("li",[t._v("REQUIRED：支持当前事务（外部事务），如果不存在则创建新事务。")]),t._v(" "),s("li",[t._v("REQUIRES_NEW：创建一个新事物，并且暂停当前事务（外部事务）。")]),t._v(" "),s("li",[t._v("NESTED：如果当前存在事务（外部事务），则嵌套在该事务中执行（独立的提交和回滚），否则就会和 REQUIRED 一样。")])])])]),t._v(" "),s("h4",{attrs:{id:"redis事务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis事务"}},[t._v("#")]),t._v(" Redis事务")]),t._v(" "),s("ul",[s("li",[t._v("在Redis事务中，不要进行查询，因为查询只能获得事务前的结果，不能实时获得执行事务时的结果，因此是无效查询。")])])])}),[],!1,null,null,null);s.default=i.exports}}]);